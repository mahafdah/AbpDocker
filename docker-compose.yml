version: '3.4'

services:
  web:
    image: abpdockerweb
    build:
      context: .
      dockerfile: src/AbpDocker.Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    ports:
      - 9005:80
    depends_on:
      - database
      - redis

  identityserver:
    image: abpdockeridentityserver
    build:
      context: .
      dockerfile: src/AbpDocker.IdentityServer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 9006:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - database
      - redis

  httpapi:
    image: abpdockerhttpapihost
    build:
      context: .
      dockerfile: src/AbpDocker.HttpApi.Host/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    ports:
     - 9007:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - database
      - redis

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - cache:/data

  database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes: 
        - database.volume:/var/opt/mssql
    environment:
        SA_PASSWORD: "P@ssw0rd"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "5432:1433"

volumes:
   database.volume:
   cache:
    driver: local

